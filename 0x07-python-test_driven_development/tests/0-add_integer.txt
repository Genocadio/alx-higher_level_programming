# 0-add_integer.txt

===========================
How to Use 0-add_integer.py
===========================

This module defines function to add integers ``add_integer(a, b=98)``.

Usage
=====

add_integer(...) returns sum of two numbers passed


>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(5.6, None)
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer("Hello", 7)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(10, 10.5)
20
>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
>>> add_integer(int('nan'))
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'nan'